{"version":3,"file":"react-country-flag.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nconst DEFAULT_CDN_URL =\n  'https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.4/flags/4x3/';\nconst DEFAULT_CDN_SUFFIX = 'svg';\n\n// offset between uppercase ascii and regional indicator symbols\nconst OFFSET = 127397;\n\ninterface EmojiProps extends React.HTMLAttributes<HTMLSpanElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: false;\n}\n\ninterface ImgProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  cdnSuffix?: string;\n  cdnUrl?: string;\n  countryCode: string;\n  style?: React.CSSProperties;\n  svg?: true;\n}\n\nexport type ReactCountryFlagProps = EmojiProps | ImgProps;\n\nexport const ReactCountryFlag = ({\n  cdnSuffix = DEFAULT_CDN_SUFFIX,\n  cdnUrl = DEFAULT_CDN_URL,\n  countryCode,\n  style,\n  svg = false,\n  ...props\n}: ReactCountryFlagProps) => {\n  if (typeof countryCode !== 'string') {\n    return null;\n  }\n\n  if (svg) {\n    const flagUrl = `${cdnUrl}${countryCode.toLowerCase()}.${cdnSuffix}`;\n\n    return (\n      <img\n        {...props}\n        src={flagUrl}\n        style={{\n          display: 'inline-block',\n          width: '1em',\n          height: '1em',\n          verticalAlign: 'middle',\n          ...style,\n        }}\n      />\n    );\n  }\n\n  const emoji = countryCode\n    .toUpperCase()\n    .replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + OFFSET));\n\n  return (\n    <span\n      role=\"img\"\n      {...props}\n      style={{\n        display: 'inline-block',\n        fontSize: '1em',\n        lineHeight: '1em',\n        verticalAlign: 'middle',\n        ...style,\n      }}\n    >\n      {emoji}\n    </span>\n  );\n};\n\nexport default ReactCountryFlag;\n"],"names":["DEFAULT_CDN_URL","DEFAULT_CDN_SUFFIX","OFFSET","ReactCountryFlag","cdnSuffix","cdnUrl","countryCode","style","svg","props","flagUrl","toLowerCase","React","src","display","width","height","verticalAlign","emoji","toUpperCase","replace","char","String","fromCodePoint","charCodeAt","role","fontSize","lineHeight"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GACnB,uEADF;AAEA,IAAMC,kBAAkB,GAAG,KAA3B;;AAGA,IAAMC,MAAM,GAAG,MAAf;IAoBaC,gBAAgB,GAAG,SAAnBA,gBAAmB;4BAC9BC;MAAAA,wCAAYH;yBACZI;MAAAA,kCAASL;MACTM,mBAAAA;MACAC,aAAAA;sBACAC;MAAAA,4BAAM;MACHC;;AAEH,MAAI,OAAOH,WAAP,KAAuB,QAA3B,EAAqC;AACnC,WAAO,IAAP;AACD;;AAED,MAAIE,GAAJ,EAAS;AACP,QAAME,OAAO,QAAML,MAAN,GAAeC,WAAW,CAACK,WAAZ,EAAf,SAA4CP,SAAzD;AAEA,WACEQ,mBAAA,MAAA,oBACMH;AACJI,MAAAA,GAAG,EAAEH;AACLH,MAAAA,KAAK;AACHO,QAAAA,OAAO,EAAE,cADN;AAEHC,QAAAA,KAAK,EAAE,KAFJ;AAGHC,QAAAA,MAAM,EAAE,KAHL;AAIHC,QAAAA,aAAa,EAAE;AAJZ,SAKAV,KALA;MAHP,CADF;AAaD;;AAED,MAAMW,KAAK,GAAGZ,WAAW,CACtBa,WADW,GAEXC,OAFW,CAEH,IAFG,EAEG,UAAAC,KAAI;AAAA,WAAIC,MAAM,CAACC,aAAP,CAAqBF,KAAI,CAACG,UAAL,CAAgB,CAAhB,IAAqBtB,MAA1C,CAAJ;AAAA,GAFP,CAAd;AAIA,SACEU,mBAAA,OAAA;AACEa,IAAAA,IAAI,EAAC;KACDhB;AACJF,IAAAA,KAAK;AACHO,MAAAA,OAAO,EAAE,cADN;AAEHY,MAAAA,QAAQ,EAAE,KAFP;AAGHC,MAAAA,UAAU,EAAE,KAHT;AAIHV,MAAAA,aAAa,EAAE;AAJZ,OAKAV,KALA;IAHP,EAWGW,KAXH,CADF;AAeD;;;;;"}